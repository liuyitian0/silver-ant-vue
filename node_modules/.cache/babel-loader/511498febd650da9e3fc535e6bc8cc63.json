{"remainingRequest":"/Users/liuyitian/Downloads/silver-ant-ui/node_modules/babel-loader/lib/index.js!/Users/liuyitian/Downloads/silver-ant-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liuyitian/Downloads/silver-ant-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuyitian/Downloads/silver-ant-ui/node_modules/vue-task-node/src/lib/components/path/tline.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuyitian/Downloads/silver-ant-ui/node_modules/vue-task-node/src/lib/components/path/tline.vue","mtime":499162500000},{"path":"/Users/liuyitian/Downloads/silver-ant-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuyitian/Downloads/silver-ant-ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/liuyitian/Downloads/silver-ant-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuyitian/Downloads/silver-ant-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\nimport Line from '../../utils/line';\nconst prefixCls = 'task-tline';\nexport default {\n  name: 'TLine',\n\n  data() {\n    return {\n      lpath: 'M0 0 Q 0 0, 0 0 T 0 0',\n      isDraw: false\n    };\n  },\n\n  props: {\n    portData: {\n      ptype: {\n        type: [String, Number],\n        default: 'Q'\n      },\n      dotted: {\n        type: [String, Boolean],\n        default: false\n      },\n      Mxy: {\n        x: [String, Number],\n        y: [String, Number]\n      },\n      Txy: {\n        x: [String, Number],\n        y: [String, Number]\n      },\n      startPort: {\n        type: [String, Number]\n      },\n      endPort: {\n        type: [String, Number]\n      }\n    }\n  },\n  computed: {\n    classes() {\n      return [`${prefixCls}`];\n    },\n\n    conCls() {\n      return [`${prefixCls}-con`];\n    },\n\n    conWrapCls() {\n      let me = this;\n      return [`${prefixCls}-con-wrap`, me.portData.dotted ? `${prefixCls}-dotted` : ``];\n    },\n\n    conWrapHoverCls() {\n      return [`${prefixCls}-hover`];\n    }\n\n  },\n  beforeUpdate: function () {\n    if (!this.isDraw) {\n      this.drawCurvePath();\n    }\n\n    this.isDraw = false;\n  },\n  mounted: function () {\n    this.drawCurvePath();\n    this.isDraw = true;\n    let me = this; // let nameSpace = 'http://www.w3.org/2000/svg'\n\n    let _this = this.$refs.con;\n\n    _this.addEventListener('mouseover', function () {\n      let wr = me.$refs.wrap;\n      wr.classList.add(me.conWrapHoverCls);\n      me.$emit('on-mouse-over', wr, me.portData);\n    });\n\n    _this.addEventListener('mouseout', function () {\n      let wr = me.$refs.wrap;\n      wr.classList.remove(me.conWrapHoverCls);\n      me.$emit('on-mouse-out', wr, me.portData);\n    });\n  },\n  methods: {\n    drawCurvePath() {\n      if (this.portData.Mxy && this.portData.Txy) {\n        this.lpath = Line.drawCurvePath(this.portData.Mxy, this.portData.Txy, this.portData.ptype, this.$store.getters.getViConfig.scaling);\n      }\n\n      return this.lpath;\n    },\n\n    mouseFn(event) {\n      event.stopPropagation();\n      this.$emit('on-mouse', event, this.portData);\n    }\n\n  }\n};",{"version":3,"sources":["tline.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <g :class=\"classes\">\n    <path :class=\"conWrapCls\" ref=\"wrap\" :d=\"lpath\">\n    </path>\n    <path :class=\"conCls\" ref=\"con\" :d=\"lpath\" @contextmenu.prevent=\"mouseFn\">\n    </path>\n  </g>\n</template>\n<script>\nimport Line from '../../utils/line'\nconst prefixCls = 'task-tline'\nexport default {\n  name: 'TLine',\n  data () {\n    return {\n      lpath: 'M0 0 Q 0 0, 0 0 T 0 0',\n      isDraw: false\n    }\n  },\n  props: {\n    portData: {\n      ptype: {\n        type: [String, Number],\n        default: 'Q'\n      },\n      dotted: {\n        type: [String, Boolean],\n        default: false\n      },\n      Mxy: {\n        x: [String, Number],\n        y: [String, Number]\n      },\n      Txy: {\n        x: [String, Number],\n        y: [String, Number]\n      },\n      startPort: {\n        type: [String, Number]\n      },\n      endPort: {\n        type: [String, Number]\n      }\n    }\n  },\n  computed: {\n    classes () {\n      return [\n        `${prefixCls}`\n      ]\n    },\n    conCls () {\n      return [\n        `${prefixCls}-con`\n      ]\n    },\n    conWrapCls () {\n      let me = this\n      return [\n        `${prefixCls}-con-wrap`,\n        me.portData.dotted ? `${prefixCls}-dotted` : ``\n      ]\n    },\n    conWrapHoverCls () {\n      return [\n        `${prefixCls}-hover`\n      ]\n    }\n  },\n  beforeUpdate: function () {\n    if (!this.isDraw) {\n      this.drawCurvePath()\n    }\n    this.isDraw = false\n  },\n  mounted: function () {\n    this.drawCurvePath()\n    this.isDraw = true\n    let me = this\n    // let nameSpace = 'http://www.w3.org/2000/svg'\n    let _this = this.$refs.con\n    _this.addEventListener('mouseover', function () {\n      let wr = me.$refs.wrap\n      wr.classList.add(me.conWrapHoverCls)\n      me.$emit('on-mouse-over', wr, me.portData)\n    })\n    _this.addEventListener('mouseout', function () {\n      let wr = me.$refs.wrap\n      wr.classList.remove(me.conWrapHoverCls)\n      me.$emit('on-mouse-out', wr, me.portData)\n    })\n  },\n  methods: {\n    drawCurvePath () {\n      if (this.portData.Mxy && this.portData.Txy) {\n        this.lpath = Line.drawCurvePath(this.portData.Mxy, this.portData.Txy, this.portData.ptype, this.$store.getters.getViConfig.scaling)\n      }\n      return this.lpath\n    },\n    mouseFn (event) {\n      event.stopPropagation()\n      this.$emit('on-mouse', event, this.portData)\n    }\n  }\n}\n</script>\n"],"sourceRoot":"node_modules/vue-task-node/src/lib/components/path"}]}