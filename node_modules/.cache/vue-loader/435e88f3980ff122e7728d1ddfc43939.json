{"remainingRequest":"/Users/liuyitian/Downloads/silver-ant-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuyitian/Downloads/silver-ant-ui/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuyitian/Downloads/silver-ant-ui/src/App.vue","mtime":1634316601796},{"path":"/Users/liuyitian/Downloads/silver-ant-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuyitian/Downloads/silver-ant-ui/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/liuyitian/Downloads/silver-ant-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuyitian/Downloads/silver-ant-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n  name: 'App',\n  data () {\n    return {\n      modelnodes: [{\n        id: 1,\n        name: '数据',\n        children: [{\n          id: 2,\n          name: 'node1',\n          icon: 'task-icon-41',\n          children: []\n        }, {\n          id: 3,\n          name: 'node2',\n          icon: 'task-icon-41',\n          children: []\n        }]\n      }, {\n        id: 3,\n        name: 'node3',\n        icon: 'task-icon-43',\n        children: []\n      }],\n      dtl: 10,\n      work_id: 'work_id',\n      ini_config: {\n        lineType: 'Q',\n        isDotted: false,\n        scaling: {\n          ZoomX: 1,\n          ZoomY: 1\n        }\n      },\n      startNode: {},\n      nodeModels: [{\n        id: '12',\n        name: 'SQL'}, {\n        id: '13',\n        name: 'WorkData'}, {\n        id: '14',\n        name: 'TableToTV'}, {\n        id: '15',\n        name: '增加系列'}],\n      initialData: {\n        id: 'node4',\n        name: '节点4',\n        positionX: 300,\n        positionY: 60,\n        icon: 'task-icon-41',\n        inPorts: [],\n        outPorts: [{\n          id: 'node4_5'\n        }]\n      },\n      nodes: [{\n        id: 'node1',\n        name: '节点1',\n        positionX: 115,\n        positionY: 180,\n        state: 'success',\n        inPorts: [{\n          id: 'node1_1',\n          isConnected: true\n        }],\n        outPorts: [{\n          id: 'node1_4'\n        }]\n      }, {\n        id: 'node2',\n        name: '节点2',\n        positionX: 20,\n        positionY: 300,\n        state: 'mistake',\n        inPorts: [{\n          id: 'node2_1',\n          isConnected: true\n        }, {\n          id: 'node2_3',\n          isConnected: false\n        }],\n        outPorts: [{\n          id: 'node2_4'\n        }, {\n          id: 'node2_5'\n        }]\n      }, {\n        id: 'node3',\n        name: '节点3',\n        positionX: 340,\n        positionY: 315,\n        state: 'running',\n        inPorts: [{\n          id: 'node3_1',\n          isConnected: true\n        }, {\n          id: 'node3_3',\n          isConnected: false\n        }],\n        outPorts: [{\n          id: 'node3_4'\n        }]\n      }, {\n        id: 'node5',\n        name: '节点5',\n        positionX: 420,\n        positionY: 420,\n        icon: 'task-icon-6',\n        inPorts: [{\n          id: 'node5_1',\n          isConnected: true\n        }],\n        outPorts: []\n      }, {\n        id: 'node6',\n        name: '节点6',\n        positionX: 720,\n        positionY: 220,\n        icon: 'task-icon-6',\n        inPorts: [{\n          id: 'node6_1',\n          isConnected: false\n        }],\n        outPorts: [{\n          id: 'node6_2'\n        }, {\n          id: 'node6_3'\n        }]\n      }],\n      paths: [{\n        dotted: true,\n        ptype: 'Q',\n        startPort: 'node4_5',\n        endPort: 'node1_1'\n      }, {\n        dotted: true,\n        ptype: 'L',\n        startPort: 'node1_4',\n        endPort: 'node2_1'\n      }, {\n        dotted: false,\n        ptype: 'ML',\n        startPort: 'node1_4',\n        endPort: 'node3_1'\n      }, {\n        dotted: false,\n        ptype: 'L',\n        startPort: 'node3_4',\n        endPort: 'node5_1'\n      }]\n    }\n  },\n  methods: {\n    zoomIn (event) {\n      this.ini_config.scaling.ZoomX = this.ini_config.scaling.ZoomX + 0.1\n      this.ini_config.scaling.ZoomY = this.ini_config.scaling.ZoomY + 0.1\n    },\n    zoomOut (event) {\n      this.ini_config.scaling.ZoomX = this.ini_config.scaling.ZoomX - 0.1\n      this.ini_config.scaling.ZoomY = this.ini_config.scaling.ZoomY - 0.1\n    },\n    onAddNodeModel (event, node) {\n      console.log('添加节点', event.clientX, event.clientY, node)\n      let newNode = {}\n      newNode = node\n      newNode.id = 'node' + (this.dtl++)\n      newNode.positionX = node.positionX - 90 // -15 -90 定位到节点的终点\n      newNode.positionY = node.positionY - 15\n      newNode.outPorts = [{\n        id: newNode.id + '_' + Math.floor(Math.random() * 10)\n      }]\n      newNode.inPorts = []\n      this.nodes.push(newNode)\n    },\n    mouseFn (event, portData) {\n      console.log('mouseFn', 'on-mouse', '鼠标右击路径事件', event, portData)\n    },\n    mouseOverFn (event, portData) {\n      console.log('mouseFn', 'on-mouse-over', '鼠标划入路径事件', event, portData)\n    },\n    mouseOutFn (event, portData) {\n      console.log('mouseFn', 'on-mouse-out', '鼠标划出路径事件', event, portData)\n    },\n    selectlMethod: function (event, data, node) {\n      console.log('selectlMethod', 'on-select', '节点左键点击事件', event, data, node)\n    },\n    dragStart: function (event, node) {\n      let nodeData = event.dataTransfer.getData('nodedata')\n      console.log('节点开始移动', event.clientX, event.clientY, node, JSON.parse(nodeData))\n      this.startNode = {id: node.id, positionX: event.clientX, positionY: event.clientY}\n    },\n    dragEnd: function (event, node) {\n      console.log('节点移动结束', event.clientX, event.clientY, node)\n      let nodeXY = {}\n      nodeXY.x = event.clientX\n      nodeXY.y = event.clientY\n      let me = this\n      this.nodes.forEach(function (item) {\n        if (item.id === node.id) {\n          item.positionX = node.positionX + (nodeXY.x - me.startNode.positionX)\n          item.positionY = node.positionY + (nodeXY.y - me.startNode.positionY)\n        }\n      })\n      if (node.id === this.initialData.id) {\n        this.initialData.positionX = node.positionX + (nodeXY.x - me.startNode.positionX)\n        this.initialData.positionY = node.positionY + (nodeXY.y - me.startNode.positionY)\n      }\n    },\n    addPath: function (event, startData, endData) {\n      let me = this\n      console.log('添加路径', event, startData, endData)\n      this.nodes.forEach(function (item) {\n        item.inPorts.forEach(function (ins) {\n          if (ins.id === endData) {\n            ins.isConnected = true\n          }\n        })\n      })\n      setTimeout(function () {\n        me.paths.push({\n          dotted: me.ini_config.isDotted,\n          ptype: me.ini_config.lineType,\n          startPort: startData,\n          endPort: endData\n        })\n      }, 200)\n    },\n    dragGing: function (event) {\n      console.log('节点移动中...', event.clientX, event.clientY)\n    },\n    updateCompleted: function () {\n      console.log('updateCompleted!!')\n      // 重新加载路径\n      this.$refs.curve.vReload()\n    },\n    mouseMenu: function (event, id) {\n      console.log('mouseMenu', 'on-mouse', '工作区右击事件', event, id)\n    },\n    mouseNodeMenu: function (event, node) {\n      console.log('mouseNodeMenu', 'on-mouse', '节点右击事件', event, node)\n    }\n  }\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <div style=\"position: relative;height: 30px\"></div>\n    <div style=\"width: 140px\">\n      <task-model-tree style=\"padding-left: 0px;\" :nodes=\"modelnodes\"></task-model-tree>\n    </div>\n    <div class=\"hello\" style=\"text-align: center\">\n      <div class=\"node-model cell-left\">\n        <ul>\n          <li style=\"border-bottom: 2px solid aliceblue;\" v-for=\"nodeM in nodeModels\" :key=\"nodeM.id\">\n            <task-node-model :node=\"nodeM\">\n              <span class=\"task-node-model-label\">{{nodeM.name}}</span>\n            </task-node-model>\n          </li>\n          <li>\n            <select class=\"demo-line\" v-model=\"ini_config.lineType\">\n              <option value='Q'>曲线</option>\n              <option value='L'>折线</option>\n              <option value='ML'>直线</option>\n            </select>\n          </li>\n          <li>\n            <select class=\"demo-line\" v-model=\"ini_config.isDotted\">\n              <option :value=true>虚线</option>\n              <option :value=false>实线</option>\n            </select>\n          </li>\n          <li>\n            <button class=\"demo-btn\" @click=\"zoomIn\">放大</button>\n            <button class=\"demo-btn\" @click=\"zoomOut\">缩小</button>\n          </li>\n        </ul>\n      </div>\n      <div class=\"cell-right\">\n        <task-work-area width=1000 height=600 :id=\"work_id\" :ini=\"ini_config\" v-on:on-add-nodemodel=\"onAddNodeModel\" v-on:on-mouse=\"mouseMenu\" ref=\"area\">\n          <task-curve-path :areaid=\"work_id\" :paths=\"paths\" ref=\"curve\" v-on:on-mouse=\"mouseFn\" v-on:on-mouse-over=\"mouseOverFn\" v-on:on-mouse-out=\"mouseOutFn\"></task-curve-path>\n          <template v-for=\"node in nodes\"  >\n            <task-common-node :key=\"node.id\" :node=\"node\" v-on:on-add-path=\"addPath\" v-on:on-select=\"selectlMethod\" v-on:on-drag-start=\"dragStart\" v-on:on-drag-ging=\"dragGing\" v-on:on-drag-end=\"dragEnd\" :updateTem=\"updateCompleted\" v-on:on-mouse=\"mouseNodeMenu\"></task-common-node>\n          </template>\n          <task-initial-node :node=\"initialData\" backgroundColor=\"#ff5722\" v-on:on-add-path=\"addPath\" v-on:on-select=\"selectlMethod\" v-on:on-drag-start=\"dragStart\" v-on:on-drag-ging=\"dragGing\" v-on:on-drag-end=\"dragEnd\" :updateTem=\"updateCompleted\" v-on:on-mouse=\"mouseNodeMenu\"></task-initial-node>\n        </task-work-area>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'App',\n  data () {\n    return {\n      modelnodes: [{\n        id: 1,\n        name: '数据',\n        children: [{\n          id: 2,\n          name: 'node1',\n          icon: 'task-icon-41',\n          children: []\n        }, {\n          id: 3,\n          name: 'node2',\n          icon: 'task-icon-41',\n          children: []\n        }]\n      }, {\n        id: 3,\n        name: 'node3',\n        icon: 'task-icon-43',\n        children: []\n      }],\n      dtl: 10,\n      work_id: 'work_id',\n      ini_config: {\n        lineType: 'Q',\n        isDotted: false,\n        scaling: {\n          ZoomX: 1,\n          ZoomY: 1\n        }\n      },\n      startNode: {},\n      nodeModels: [{\n        id: '12',\n        name: 'SQL'}, {\n        id: '13',\n        name: 'WorkData'}, {\n        id: '14',\n        name: 'TableToTV'}, {\n        id: '15',\n        name: '增加系列'}],\n      initialData: {\n        id: 'node4',\n        name: '节点4',\n        positionX: 300,\n        positionY: 60,\n        icon: 'task-icon-41',\n        inPorts: [],\n        outPorts: [{\n          id: 'node4_5'\n        }]\n      },\n      nodes: [{\n        id: 'node1',\n        name: '节点1',\n        positionX: 115,\n        positionY: 180,\n        state: 'success',\n        inPorts: [{\n          id: 'node1_1',\n          isConnected: true\n        }],\n        outPorts: [{\n          id: 'node1_4'\n        }]\n      }, {\n        id: 'node2',\n        name: '节点2',\n        positionX: 20,\n        positionY: 300,\n        state: 'mistake',\n        inPorts: [{\n          id: 'node2_1',\n          isConnected: true\n        }, {\n          id: 'node2_3',\n          isConnected: false\n        }],\n        outPorts: [{\n          id: 'node2_4'\n        }, {\n          id: 'node2_5'\n        }]\n      }, {\n        id: 'node3',\n        name: '节点3',\n        positionX: 340,\n        positionY: 315,\n        state: 'running',\n        inPorts: [{\n          id: 'node3_1',\n          isConnected: true\n        }, {\n          id: 'node3_3',\n          isConnected: false\n        }],\n        outPorts: [{\n          id: 'node3_4'\n        }]\n      }, {\n        id: 'node5',\n        name: '节点5',\n        positionX: 420,\n        positionY: 420,\n        icon: 'task-icon-6',\n        inPorts: [{\n          id: 'node5_1',\n          isConnected: true\n        }],\n        outPorts: []\n      }, {\n        id: 'node6',\n        name: '节点6',\n        positionX: 720,\n        positionY: 220,\n        icon: 'task-icon-6',\n        inPorts: [{\n          id: 'node6_1',\n          isConnected: false\n        }],\n        outPorts: [{\n          id: 'node6_2'\n        }, {\n          id: 'node6_3'\n        }]\n      }],\n      paths: [{\n        dotted: true,\n        ptype: 'Q',\n        startPort: 'node4_5',\n        endPort: 'node1_1'\n      }, {\n        dotted: true,\n        ptype: 'L',\n        startPort: 'node1_4',\n        endPort: 'node2_1'\n      }, {\n        dotted: false,\n        ptype: 'ML',\n        startPort: 'node1_4',\n        endPort: 'node3_1'\n      }, {\n        dotted: false,\n        ptype: 'L',\n        startPort: 'node3_4',\n        endPort: 'node5_1'\n      }]\n    }\n  },\n  methods: {\n    zoomIn (event) {\n      this.ini_config.scaling.ZoomX = this.ini_config.scaling.ZoomX + 0.1\n      this.ini_config.scaling.ZoomY = this.ini_config.scaling.ZoomY + 0.1\n    },\n    zoomOut (event) {\n      this.ini_config.scaling.ZoomX = this.ini_config.scaling.ZoomX - 0.1\n      this.ini_config.scaling.ZoomY = this.ini_config.scaling.ZoomY - 0.1\n    },\n    onAddNodeModel (event, node) {\n      console.log('添加节点', event.clientX, event.clientY, node)\n      let newNode = {}\n      newNode = node\n      newNode.id = 'node' + (this.dtl++)\n      newNode.positionX = node.positionX - 90 // -15 -90 定位到节点的终点\n      newNode.positionY = node.positionY - 15\n      newNode.outPorts = [{\n        id: newNode.id + '_' + Math.floor(Math.random() * 10)\n      }]\n      newNode.inPorts = []\n      this.nodes.push(newNode)\n    },\n    mouseFn (event, portData) {\n      console.log('mouseFn', 'on-mouse', '鼠标右击路径事件', event, portData)\n    },\n    mouseOverFn (event, portData) {\n      console.log('mouseFn', 'on-mouse-over', '鼠标划入路径事件', event, portData)\n    },\n    mouseOutFn (event, portData) {\n      console.log('mouseFn', 'on-mouse-out', '鼠标划出路径事件', event, portData)\n    },\n    selectlMethod: function (event, data, node) {\n      console.log('selectlMethod', 'on-select', '节点左键点击事件', event, data, node)\n    },\n    dragStart: function (event, node) {\n      let nodeData = event.dataTransfer.getData('nodedata')\n      console.log('节点开始移动', event.clientX, event.clientY, node, JSON.parse(nodeData))\n      this.startNode = {id: node.id, positionX: event.clientX, positionY: event.clientY}\n    },\n    dragEnd: function (event, node) {\n      console.log('节点移动结束', event.clientX, event.clientY, node)\n      let nodeXY = {}\n      nodeXY.x = event.clientX\n      nodeXY.y = event.clientY\n      let me = this\n      this.nodes.forEach(function (item) {\n        if (item.id === node.id) {\n          item.positionX = node.positionX + (nodeXY.x - me.startNode.positionX)\n          item.positionY = node.positionY + (nodeXY.y - me.startNode.positionY)\n        }\n      })\n      if (node.id === this.initialData.id) {\n        this.initialData.positionX = node.positionX + (nodeXY.x - me.startNode.positionX)\n        this.initialData.positionY = node.positionY + (nodeXY.y - me.startNode.positionY)\n      }\n    },\n    addPath: function (event, startData, endData) {\n      let me = this\n      console.log('添加路径', event, startData, endData)\n      this.nodes.forEach(function (item) {\n        item.inPorts.forEach(function (ins) {\n          if (ins.id === endData) {\n            ins.isConnected = true\n          }\n        })\n      })\n      setTimeout(function () {\n        me.paths.push({\n          dotted: me.ini_config.isDotted,\n          ptype: me.ini_config.lineType,\n          startPort: startData,\n          endPort: endData\n        })\n      }, 200)\n    },\n    dragGing: function (event) {\n      console.log('节点移动中...', event.clientX, event.clientY)\n    },\n    updateCompleted: function () {\n      console.log('updateCompleted!!')\n      // 重新加载路径\n      this.$refs.curve.vReload()\n    },\n    mouseMenu: function (event, id) {\n      console.log('mouseMenu', 'on-mouse', '工作区右击事件', event, id)\n    },\n    mouseNodeMenu: function (event, node) {\n      console.log('mouseNodeMenu', 'on-mouse', '节点右击事件', event, node)\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n  .node-model{\n    background-color: #eee;\n    width: 140px;\n    height: 500px;\n  }\n  .cell-left{\n    float: left;\n  }\n  .cell-fight{\n    float: left;\n  }\n  .demo-line{\n    width: 140px;\n    height: 26px;\n    border: none;\n  }\n  .demo-btn{\n    width: 48%;\n    background-color: #fff;\n    border: 1px solid #eee;\n    font-size: 14px;\n    line-height: 26px;\n    cursor: pointer;\n  }\n  // @import \"lib/styles/index.less\";\n  /*#app {*/\n  /*font-family: 'Avenir', Helvetica, Arial, sans-serif;*/\n  /*-webkit-font-smoothing: antialiased;*/\n  /*-moz-osx-font-smoothing: grayscale;*/\n  /*text-align: center;*/\n  /*color: #2c3e50;*/\n  /*padding: 50px;*/\n  /*background-color: #cccccc;*/\n  /*}*/\n</style>\n\n<!--\n.icon {\n  font-family: \"iconfont\" !important;\n  font-size: 16px;\n  font-style: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n[class^=\"icon-task\"], [class*=\" icon-task\"] {\n  font-family:\"iconfont\" !important;\n  /* 以下内容参照第三方图标库本身的规则 */\n  font-size: 18px;\n  font-style:normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}"]}]}